/*
 * led_control.c
 * Author: Quinn Ivison
 */

#include "led_control.h"

void errorLED(void)
{
	activateLED(eERROR);
}

void pendingLED(void)
{
	activateLED(ePENDING);
}

void successLED(void)
{
	activateLED(eSUCCESS);
}

void activateLED(uint16_t ledType)
{
	if(activeLED == ledType)
	{
		return;
	}

	disableLEDs();
	__HAL_TIM_SET_COUNTER(&htim3, 0);

	activeLEDState = false;
	activeLED = ledType;
}

void disableLEDs(void)
{
	for(int led = 0; led < NUM_LEDS; led++)
	{
		HAL_GPIO_WritePin(LED_PORTS[led], LED_PINS[led], GPIO_PIN_RESET);
	}

	activeLEDState = false;
	activeLED = eNONE;
}

void blinkLED(void)
{
	if(activeLED == eNONE)
	{
		return;
	}

	if(((__HAL_TIM_GET_COUNTER(&htim3) % BLINK_INTERVAL) < (BLINK_INTERVAL / 2)) && !activeLEDState)
	{
		HAL_GPIO_WritePin(LED_PORTS[activeLED - 1], LED_PINS[activeLED - 1], GPIO_PIN_SET);
		activeLEDState = true;
	}
	else if(((__HAL_TIM_GET_COUNTER(&htim3) % BLINK_INTERVAL) >= (BLINK_INTERVAL / 2)) && activeLEDState)
	{
		HAL_GPIO_WritePin(LED_PORTS[activeLED - 1], LED_PINS[activeLED - 1], GPIO_PIN_RESET);
		activeLEDState = true;
	}
}
